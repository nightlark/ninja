name: Release Ninja Binaries

on:
  push:
  release:
    types: published

jobs:
  one:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
        
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        include:
          - os: ubuntu-latest
            zip_name: ninja-linux
          - os: macOS-latest
            zip_name: ninja-mac
          - os: windows-latest
            zip_name: ninja-win

    steps:
    - uses: actions/checkout@v1
      
    # Install OS specific dependencies
    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install re2c
    - name: Install macOS dependencies
      if: matrix.os == 'macOS-latest'
      run: |
        wget https://github.com/phracker/MacOSX-SDKs/releases/download/10.13/MacOSX10.13.sdk.tar.xz
        tar -xf MacOSX10.13.sdk.tar.xz -C /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs
        ls /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs
        /usr/libexec/PlistBuddy -c "Print" /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Info.plist
        #/usr/libexec/PlistBuddy -c "Set :MinimumSDKVersion 10.10" /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Info.plist
        #/usr/libexec/PlistBuddy -c "Print :MinimumSDKVersion" /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Info.plist
        xcodebuild -showsdks
        brew install re2c p7zip cmake
    - name: Install Windows dependencies
      if: matrix.os == 'windows-latest'
      run: ls "C:/Program Files (x86)/Microsoft Visual Studio/"
        
    - name: Build ninja
      shell: bash
      run: |
        mkdir build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . --parallel --config Release --target ninja
        
    - name: Strip Linux binary
      if: matrix.os == 'ubuntu-latest'
      run: cd build && strip ninja
        
    - name: Create ninja archive
      shell: bash
      env:
        ZIP_NAME: ${{ matrix.zip_name }}
      run: |
        mkdir artifact
        7z a artifact/${ZIP_NAME}.zip $(find ./build -name ninja -or -name ninja.exe)
        
    # Upload ninja binary archive as an artifact
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: ninja-binary-archives
        path: artifact
        
    - name: Upload release asset
      if: github.event.action == 'published'
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./artifact/${{ matrix.zip_name }}.zip
        asset_name: ${{ matrix.zip_name }}.zip
        asset_content_type: application/zip
